FROM centos:7

RUN rpm --import http://yum.repos.intel.com/2017/setup/RPM-GPG-KEY-intel-psxe-runtime-2017 \
    && rpm -Uhv http://yum.repos.intel.com/2017/setup/intel-psxe-runtime-2017-reposetup-1-0.noarch.rpm \
    && yum install -y \
           bzip2 \
           cmake \
           epel-release \
           gcc \
           gcc-c++ \
           gcc-gfortran \
           git \
           intel-icc-runtime-64 \
           intel-ifort-runtime-64 \
           intel-mkl-runtime-64 \
           make \
           m4 \
           patch \
           perl \
           pkgconfig \
           python \
           which \
           wget \
    && mkdir /tmp_install \
    && cd /tmp_install \
    && wget -q https://cmake.org/files/v3.7/cmake-3.7.1.tar.gz \
    && tar zxf cmake-3.7.1.tar.gz \
    && cd cmake-3.7.1 \
    && cmake . \
    && make -j 4 \
    && make install \
    && cd /tmp_install \
    && wget -q http://registrationcenter-download.intel.com/akdlm/irc_nas/11113/xppsl-1.4.3-rhel7.2.tar \
    && tar xf xppsl-1.4.3-rhel7.2.tar \
    && yum install -y xppsl-1.4.3/rhel7.2/x86_64/*-memkind-* \
    && cd / \
    && rm -rf /tmp_install \
    && git clone https://github.com/JuliaLang/julia.git
    && cd /julia \
    && echo USE_ICC = 1 >> Make.user \
    && echo USE_IFC = 1 >> Make.user \
    && echo USE_INTEL_MKL = 1 >> Make.user \
    && echo USE_INTEL_MKL_FFT = 1 >> Make.user \
    && echo USE_INTEL_LIBM = 1 >> Make.user \
    && echo override LLVM_VER=svn >> Make.user \
    && echo override USE_INTEL_MKL=1 >> Make.user \
    && make -C deps get-llvm

# if you have parallel studio installed in the container, then add these 2 lines
# if you have parallel studio installed in the host, then run the container and use -v /opt:/opt
# to make parallel studio available in the container, execute these 2 commands, exit the container
# and then do a 'docker commit' command to save the container as an image
#    && source /opt/intel/bin/compilervars.sh intel64 \
#    && make
